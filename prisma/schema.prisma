generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")

}

model nas {
  id          Int     @id @default(autoincrement())
  nasname     String  @db.VarChar(128)
  shortname   String? @db.VarChar(32)
  type        String? @default("other") @db.VarChar(30)
  ports       Int?
  secret      String  @default("secret") @db.VarChar(60)
  server      String? @db.VarChar(64)
  community   String? @db.VarChar(50)
  description String? @default("RADIUS Client") @db.VarChar(200)

  @@index([nasname], map: "nasname")
}

model nasreload {
  nasipaddress String   @id @db.VarChar(15)
  reloadtime   DateTime @db.DateTime(0)
}

model radacct {
  radacctid           BigInt    @id @default(autoincrement())
  acctsessionid       String    @default("") @db.VarChar(64)
  acctuniqueid        String    @unique(map: "acctuniqueid") @default("") @db.VarChar(32)
  username            String    @default("") @db.VarChar(64)
  realm               String?   @default("") @db.VarChar(64)
  nasipaddress        String    @default("") @db.VarChar(15)
  nasportid           String?   @db.VarChar(32)
  nasporttype         String?   @db.VarChar(32)
  acctstarttime       DateTime? @db.DateTime(0)
  acctupdatetime      DateTime? @db.DateTime(0)
  acctstoptime        DateTime? @db.DateTime(0)
  acctinterval        Int?
  acctsessiontime     Int?      @db.UnsignedInt
  acctauthentic       String?   @db.VarChar(32)
  connectinfo_start   String?   @db.VarChar(128)
  connectinfo_stop    String?   @db.VarChar(128)
  acctinputoctets     BigInt?
  acctoutputoctets    BigInt?
  calledstationid     String    @default("") @db.VarChar(50)
  callingstationid    String    @default("") @db.VarChar(50)
  acctterminatecause  String    @default("") @db.VarChar(32)
  servicetype         String?   @db.VarChar(32)
  framedprotocol      String?   @db.VarChar(32)
  framedipaddress     String    @default("") @db.VarChar(15)
  framedipv6address   String    @default("") @db.VarChar(45)
  framedipv6prefix    String    @default("") @db.VarChar(45)
  framedinterfaceid   String    @default("") @db.VarChar(44)
  delegatedipv6prefix String    @default("") @db.VarChar(45)
  class               String?   @db.VarChar(64)

  @@index([acctinterval], map: "acctinterval")
  @@index([acctsessionid], map: "acctsessionid")
  @@index([acctsessiontime], map: "acctsessiontime")
  @@index([acctstarttime], map: "acctstarttime")
  @@index([acctstoptime], map: "acctstoptime")
  @@index([class], map: "class")
  @@index([delegatedipv6prefix], map: "delegatedipv6prefix")
  @@index([framedinterfaceid], map: "framedinterfaceid")
  @@index([framedipaddress], map: "framedipaddress")
  @@index([framedipv6address], map: "framedipv6address")
  @@index([framedipv6prefix], map: "framedipv6prefix")
  @@index([nasipaddress], map: "nasipaddress")
  @@index([username], map: "username")
}

model radcheck {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  username  String @default("") @db.VarChar(64)
  attribute String @default("") @db.VarChar(64)
  op        String @default("==") @db.Char(2)
  value     String @default("") @db.VarChar(253)

  @@index([username(length: 32)], map: "username")
}

model radgroupcheck {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  groupname String @default("") @db.VarChar(64)
  attribute String @default("") @db.VarChar(64)
  op        String @default("==") @db.Char(2)
  value     String @default("") @db.VarChar(253)

  @@index([groupname(length: 32)], map: "groupname")
}

model radgroupreply {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  groupname String @default("") @db.VarChar(64)
  attribute String @default("") @db.VarChar(64)
  op        String @default("=") @db.Char(2)
  value     String @default("") @db.VarChar(253)

  @@index([groupname(length: 32)], map: "groupname")
}

model radpostauth {
  id       Int      @id @default(autoincrement())
  username String   @default("") @db.VarChar(64)
  pass     String   @default("") @db.VarChar(64)
  reply    String   @default("") @db.VarChar(32)
  authdate DateTime @default(now()) @db.Timestamp(6)
  class    String?  @db.VarChar(64)

  @@index([class], map: "class")
  @@index([username], map: "username")
}

model radreply {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  username  String @default("") @db.VarChar(64)
  attribute String @default("") @db.VarChar(64)
  op        String @default("=") @db.Char(2)
  value     String @default("") @db.VarChar(253)

  @@index([username(length: 32)], map: "username")
}

model radusergroup {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  username  String @default("") @db.VarChar(64)
  groupname String @default("") @db.VarChar(64)
  priority  Int    @default(1)

  @@index([username(length: 32)], map: "username")
}

model userinfo {
  id        Int    @id @default(autoincrement())
  username  String  @unique @db.VarChar(64)
  fullName  String  @default("") @db.VarChar(255)
  department  String @default("") @db.VarChar(64)
}

model admin{
  id        Int    @id @default(autoincrement())
  username  String  @unique
  password  String

}